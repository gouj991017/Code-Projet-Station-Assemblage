/**
 *
 * @author Guim
 */

import org.fusesource.mqtt.client.BlockingConnection;
import org.fusesource.mqtt.client.MQTT;
import org.fusesource.mqtt.client.Message;
import org.fusesource.mqtt.client.QoS;
import org.fusesource.mqtt.client.Topic;
import org.json.*;

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    
    //Definition informations relatives a l'autentification et a la connection.
    String host = env("ACTIVEMQ_HOST", "localhost");
    int port = Integer.parseInt(env("ACTIVEMQ_PORT", "1883"));
    final String TOPIC = "/scal/scal_reponse_requete";
    
    public NewJFrame()
    {
        initComponents();
        MQTT mqtt = new MQTT(); //Objet MQTT pour la communication.
        try
        {
            mqtt.setHost(host, port);
        
            BlockingConnection connection = mqtt.blockingConnection();
            /*connection.connect();   //Debut de la conversation MQTT.
            
            //Subscribe au topic Scal
            Topic[] subtopics = {new Topic(TOPIC, QoS.AT_LEAST_ONCE)};
            connection.subscribe(subtopics);    //Ecoute...
            /*
            Thread t = new Thread(new Runnable()    //Déclaration du thread d'écoute du canal MQTT.
            {
                @Override
                public void run()
                {
                    try
                    {*/ /*
                        while(true)    //Attente d'une reponse.
                        {
                            Message message = connection.receive(); //Aucun delais de timout.
                            if(message!=null)   //Si le message recu detient un contenu:
                            {
                                JSONObject jo = new JSONObject();   //Declaration de l'objet JSON a envoyer.
                                //Traitement.
                                jo = new JSONObject(message.getPayload());  //Cast du message dans un format string.
                                textBoxAffiche.setText(jo.toString());
                            }
                        }/*
                    }
                    catch(Exception ex)
                    {
                        
                    }
                }
            }); //Définition du thread d'écoute.
            t.start();
            */
        }
        catch(Exception ex)
        {
            System.out.println("Impossible d'établir la connection");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        f_Couleur = new javax.swing.JFrame();
        jColorChooser = new javax.swing.JColorChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        textBoxAffiche = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        db_Menu = new javax.swing.JMenu();
        b_Quitter = new javax.swing.JMenu();
        db_Edit = new javax.swing.JMenu();
        b_couleur = new javax.swing.JMenu();

        f_Couleur.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        f_Couleur.setAlwaysOnTop(true);
        f_Couleur.setBackground(new java.awt.Color(100, 100, 100));
        f_Couleur.setSize(new java.awt.Dimension(877, 551));
        f_Couleur.setType(java.awt.Window.Type.POPUP);

        jColorChooser.setBackground(new java.awt.Color(100, 100, 100));

        javax.swing.GroupLayout f_CouleurLayout = new javax.swing.GroupLayout(f_Couleur.getContentPane());
        f_Couleur.getContentPane().setLayout(f_CouleurLayout);
        f_CouleurLayout.setHorizontalGroup(
            f_CouleurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(f_CouleurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jColorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        f_CouleurLayout.setVerticalGroup(
            f_CouleurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(f_CouleurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jColorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("FramePrincipale"); // NOI18N

        textBoxAffiche.setBackground(new java.awt.Color(0, 0, 0));
        textBoxAffiche.setColumns(20);
        textBoxAffiche.setForeground(new java.awt.Color(255, 255, 255));
        textBoxAffiche.setRows(5);
        textBoxAffiche.setText("Hello boiz\n");
        textBoxAffiche.setName("textBoxAffiche"); // NOI18N
        jScrollPane1.setViewportView(textBoxAffiche);

        jMenuBar1.setBackground(new java.awt.Color(100, 100, 100));

        db_Menu.setText("Menu");

        b_Quitter.setText("Quitter");
        b_Quitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_QuitterMouseClicked(evt);
            }
        });
        db_Menu.add(b_Quitter);

        jMenuBar1.add(db_Menu);

        db_Edit.setText("Edit");

        b_couleur.setText("Couleur du texte");
        b_couleur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_couleurMouseClicked(evt);
            }
        });
        db_Edit.add(b_couleur);

        jMenuBar1.add(db_Edit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_QuitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_QuitterMouseClicked
        System.exit(0);
    }//GEN-LAST:event_b_QuitterMouseClicked

    private void b_couleurMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_couleurMouseClicked
        f_Couleur.setVisible(true);
    }//GEN-LAST:event_b_couleurMouseClicked

    private static String env(String key, String defaultValue) {
        String rc = System.getenv(key);
        if( rc== null )
            return defaultValue;
        return rc;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu b_Quitter;
    private javax.swing.JMenu b_couleur;
    private javax.swing.JMenu db_Edit;
    private javax.swing.JMenu db_Menu;
    private javax.swing.JFrame f_Couleur;
    private javax.swing.JColorChooser jColorChooser;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTextArea textBoxAffiche;
    // End of variables declaration//GEN-END:variables
}
