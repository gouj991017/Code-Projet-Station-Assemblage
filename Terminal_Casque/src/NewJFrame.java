/**
 * @brief Il s'agit du programme présentant les instruction pour l'opérateur de la station d'assemblage.
 * Les instructions sont présentées une à la fois. Il est possible de choisir la couleur du texte dans
 * l'onglet Edit->Couleur du texte et de changer la source des messages dans Edit->Adresse IP:.
 * Les messages sont reçus par MQTT sur le topic: /scal/scal_reponse_requete .
 * @author Guillaume Beaudoin
 * @version 1.2
 * @date 16-02-20
 */

import java.awt.Color;
import org.fusesource.mqtt.client.BlockingConnection;
import org.fusesource.mqtt.client.MQTT;
import org.fusesource.mqtt.client.Message;
import org.fusesource.mqtt.client.QoS;
import org.fusesource.mqtt.client.Topic;
import org.json.*;

public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    
    //Definition informations relatives a l'autentification et a la connection.
    String host = env("ACTIVEMQ_HOST", "localhost");
    int port = Integer.parseInt(env("ACTIVEMQ_PORT", "1883"));
    static final String TOPIC = "/scal/scal_reponse_requete";
    static BlockingConnection connection;
    static Topic[] subtopics = {new Topic(TOPIC, QoS.AT_LEAST_ONCE)};
    static MQTT mqtt = new MQTT(); //Objet MQTT pour la communication.
    
    public NewJFrame()
    {
        initComponents();
        try
        {
            mqtt.setHost(host, port);
        }
        catch(Exception ex)
        {
            System.out.println("Impossible d'établir la connection");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        f_Couleur = new javax.swing.JFrame();
        jColorChooser = new javax.swing.JColorChooser();
        jIp = new javax.swing.JFrame();
        textboxIp = new javax.swing.JTextField();
        jBoutonValide = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textBoxAffiche = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        db_Menu = new javax.swing.JMenu();
        b_Quitter = new javax.swing.JMenu();
        db_Edit = new javax.swing.JMenu();
        b_couleur = new javax.swing.JMenu();
        b_ip = new javax.swing.JMenu();

        f_Couleur.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        f_Couleur.setAlwaysOnTop(true);
        f_Couleur.setBackground(new java.awt.Color(100, 100, 100));
        f_Couleur.setSize(new java.awt.Dimension(877, 551));

        jColorChooser.setBackground(new java.awt.Color(100, 100, 100));

        javax.swing.GroupLayout f_CouleurLayout = new javax.swing.GroupLayout(f_Couleur.getContentPane());
        f_Couleur.getContentPane().setLayout(f_CouleurLayout);
        f_CouleurLayout.setHorizontalGroup(
            f_CouleurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(f_CouleurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jColorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        f_CouleurLayout.setVerticalGroup(
            f_CouleurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(f_CouleurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jColorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jIp.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jIp.setSize(new java.awt.Dimension(298, 125));

        textboxIp.setText("localhost");

        jBoutonValide.setText("OK");
        jBoutonValide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jBoutonValideMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jIpLayout = new javax.swing.GroupLayout(jIp.getContentPane());
        jIp.getContentPane().setLayout(jIpLayout);
        jIpLayout.setHorizontalGroup(
            jIpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jIpLayout.createSequentialGroup()
                .addGroup(jIpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jIpLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(textboxIp, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jIpLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jBoutonValide)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jIpLayout.setVerticalGroup(
            jIpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jIpLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textboxIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBoutonValide)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("FramePrincipale"); // NOI18N

        textBoxAffiche.setBackground(new java.awt.Color(0, 0, 0));
        textBoxAffiche.setColumns(20);
        textBoxAffiche.setFont(new java.awt.Font("Monospaced", 0, 24)); // NOI18N
        textBoxAffiche.setForeground(new java.awt.Color(255, 255, 255));
        textBoxAffiche.setLineWrap(true);
        textBoxAffiche.setRows(5);
        textBoxAffiche.setText("Auteur: Guillaume Beaudoin\n============================\nTerminal casque   v1.2\n============================\n");
        textBoxAffiche.setName("textBoxAffiche"); // NOI18N
        jScrollPane1.setViewportView(textBoxAffiche);

        jMenuBar1.setBackground(new java.awt.Color(100, 100, 100));

        db_Menu.setText("Menu");

        b_Quitter.setText("Quitter");
        b_Quitter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_QuitterMouseClicked(evt);
            }
        });
        db_Menu.add(b_Quitter);

        jMenuBar1.add(db_Menu);

        db_Edit.setText("Edit");

        b_couleur.setText("Couleur du texte");
        b_couleur.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_couleurMouseClicked(evt);
            }
        });
        db_Edit.add(b_couleur);

        b_ip.setText("Adresse IP: localhost");
        b_ip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_ipMouseClicked(evt);
            }
        });
        db_Edit.add(b_ip);

        jMenuBar1.add(db_Edit);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_QuitterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_QuitterMouseClicked
        System.exit(0);
    }//GEN-LAST:event_b_QuitterMouseClicked

    private void b_couleurMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_couleurMouseClicked
        f_Couleur.setVisible(true); //popup de la fenêtre de sélection des couleurs.
    }//GEN-LAST:event_b_couleurMouseClicked

    private void jBoutonValideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jBoutonValideMouseClicked
        try
        {
            connection.disconnect();    //Déconnection...
            
            mqtt.setHost(textboxIp.getText(), port);    //Changement de l'addresse ip.
            b_ip.setText("Adresse IP: " +textboxIp.getText());
            
            connection = mqtt.blockingConnection(); //Reconnection...
            connection.connect();   //Debut de la conversation MQTT.
            connection.subscribe(subtopics);    //Ecoute...
        }
        catch(Exception ex)
        {
            System.out.println("Erreur: " + ex.getMessage());
        }
        jIp.setVisible(false);
    }//GEN-LAST:event_jBoutonValideMouseClicked

    private void b_ipMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_ipMouseClicked
        jIp.setVisible(true);   //popup de la fenêtre de sélection de l'adresse ip.
    }//GEN-LAST:event_b_ipMouseClicked

    private static String env(String key, String defaultValue) {
        String rc = System.getenv(key);
        if( rc== null )
            return defaultValue;
        return rc;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new NewJFrame().setVisible(true);
            }
        });
        try
        {
            connection = mqtt.blockingConnection();
            connection.connect();   //Debut de la conversation MQTT.
            connection.subscribe(subtopics);    //Ecoute...
        }
        catch(Exception ex)
        {
            System.out.println("Échec de la connection MQTT");
            System.out.println("" + ex.toString());
        }
        while(true)
        {
            String source = "";
            int numetape = 0;
            String payload = "";
            try
            {
                textBoxAffiche.setForeground(jColorChooser.getColor());
                Message message = connection.receive(); //Aucun delais de timout.
                if(message!=null)   //Si le message recu detient un contenu:
                    {
                    JSONObject jo;
                    //Traitement.
                    payload = new String(message.getPayload());
                    jo = new JSONObject(payload);   //Definition de l'objet JSON reçu.
                    
                    source = jo.getString("Source");
                    numetape = jo.getInt("Numetape");
                    payload = jo.getString("Message");
                    
                    if(numetape == 0) //L'étape 0 est le message d'introduction.
                    {
                        textBoxAffiche.setText(textBoxAffiche.getText() + "\n\r["+ source +"]  " + payload);    //Ajoute le message plus récent sur une nouvelle ligne.
                    }
                    else
                    {
                        textBoxAffiche.setText(textBoxAffiche.getText() + "\n\r["+ source +"] [Étape # "+ numetape +"]  " + payload);    //Ajoute le message plus récent sur une nouvelle ligne.
                    }
                }
            }
            catch(Exception ex)
            {

            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu b_Quitter;
    private javax.swing.JMenu b_couleur;
    private javax.swing.JMenu b_ip;
    private javax.swing.JMenu db_Edit;
    private javax.swing.JMenu db_Menu;
    private javax.swing.JFrame f_Couleur;
    private javax.swing.JButton jBoutonValide;
    private static javax.swing.JColorChooser jColorChooser;
    private javax.swing.JFrame jIp;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea textBoxAffiche;
    private javax.swing.JTextField textboxIp;
    // End of variables declaration//GEN-END:variables
}
